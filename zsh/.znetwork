# User-specific network configuration for interactive zsh(1) shells.


#MARK: - SSH
# SSH connect to one of SFU's CSIL servers.
function csil() {
    ssh -p '24' -l 'mpuchkov' $SFU_CSIL
}
function csil-tmux() {
    ssh -p '24' -l 'mpuchkov' $SFU_CSIL -t tmux a
}
function vm() {
    typeset username=${1:-mininet}
    ssh -Y -l "$username" mininet
}

function from-vm() {
    typeset username='mininet'
    typeset server='mininet'
    typeset remote_path=$1
    typeset local_path=${2:-$HOME/Documents/${username}@${server}/$remote_path}
    mkdir -p $local_path
    scp mininet@mininet:$remote_path $local_path
}


#MARK: - SSHFS
# Mount CSIL home directory (~/.ssh/config).
function mount_csil() {
    if $( ! sshfs $SFU_CSIL:/home/$SFU_USER "$SFU_MNT" ); then
        printf 'Error: failed to mount %s.\n' "'$(Bad $SFU_MNT)'"
        return 1
    fi
    printf 'OK: %s successfully mounted.\n' "'$(OK $SFU_MNT)'"
    return 0
}
# Unmount CSIL.
function umount_csil() {
    if $( dir isempty "$SFU_MNT" noerr ); then
        printf 'Error: %s is not a mountpoint.\n' "'$(Bad $SFU_MNT)'"
        return 1
    fi
    umount "$SFU_MNT"
    printf 'OK: unmounted %s.\n' "'$(OK $SFU_MNT)'"
    return 0
}


function mnts() {
    local mountpoint_root='/usr/local/mnt'
    printf 'Mountpoints:\n'
    for m in $mountpoint_root/*; do
        local m_status=$(OK 'mounted')
        if $( idir isempty "$SFU_MNT" noerr ); then
            m_status=$(Bad 'not mounted')
            return 1
        fi
        printf '  %s:    %s\n' "$m" "$m_status"
    done
    return 0
}
