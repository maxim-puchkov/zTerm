#!/bin/zsh

#  search
#  zTerm (id: 157)
#
#  Generated by 'zfn' on 2020-11-13
#  Copyright Â© 2020 Maxim Puchkov. All rights reserved.


# search
#
# <#Description#>
#
# Usage:
# search <#...#>
emulate -L zsh
autoload -Uz error

typeset PROG="${0##*/}"
# Function options.
# @define     option
# @define     args    *: :_default
# @annotation option  @opt
#
# @opt -g,--google: search on Google.
# @opt -i,--images: search images on Google.
# @opt -d,--duckduckgo: search on DuckDuckGo.
# @opt -T,--thesaurus: search synonyms on Thesaurus.com.
# @opt -D,--dictionary: search definitions on Dictionary.com.
#:: opt -t
#:: opt -y
local -A opts
local -a specs=(
  -google       'g=-google'
  -images       'i=-images'
  -duckduckgo   'd=-duckduckgo'
  -dictionary   'D=-dictionary'
  -thesaurus    'T=-thesaurus'
  -translate    't=-translate'
  -youtube      'y=-youtube'
)
if ! zparseopts -D -F -K -M -A opts - ${specs[@]} \
   2> >(error -I -d: -f3-); then
  return 1
fi

# Default: search for all results on Google.
if [[ ${#opts} -eq 0 ]]; then
  opts[--google]="true"
fi


# Search query.
local query="${*// /+}"
if [[ -z "$query" ]]; then
  error -1 -m 'search query is not specified'
fi

# URLs to open.
local -a urls=()
case 1 in
  $+opts[--google]) urls+="https://www.google.com/search?q=${query}"          ;|
  $+opts[--images]) urls+="https://www.google.com/search?q=${query}&tbm=isch" ;|
  $+opts[--duckduckgo]) urls+="https://duckduckgo.com/?q=${query}&t=osx"      ;|
  $+opts[--dictionary]) urls+="https://www.dictionary.com/browse/${query}"    ;|
  $+opts[--thesaurus])  urls+="https://www.thesaurus.com/browse/${query}"     ;|
  $+opts[--translate])
    urls+="https://translate.google.com/?sl=en&tl=ru&text=${query}&op=translate" ;|
  $+opts[--youtube])
    urls+="https://www.youtube.com/results?search_query=${query}"             ;|
    
esac

# Open all urls in browser.
command open -- "${urls[@]}"
return $?
