#!/bin/zsh

#  iff
#  Z-Function (74)
#
#  Created by Maxim Puchkov on 2020-06-25.
#  Copyright Â© 2020 Maxim Puchkov. All rights reserved.


# vars=(X Y) X=(1 2) Y=(3 4) iff 'X -lt Y'
# 1<3, 1<4, 2<3, 2<4

# iff -v X Y Z

# Evaluate and display the result of conditional expressions.
function iff() {(
    export prog=$0
    ## iff -i var: specify variable names ##
    if [[ $1 == '-i' ]]; then
        typeset -a vars=(${(s:,:)2})
        shift 2
    fi
    [[ $1 == '--' ]] && shift
    
    for v in $vars; do
        show "Var is $v"
        for m in ${(M)argv:#$v}; do
            show 'Matching element: $m'
            argv[(i)$m]=$
#        set -- ${argv//$v/$REPL}
        for vexp in ${(M)argv:#(|* )${v}( *|)}; do
            print $vexp
        done
    done
    
    # Evaluate each argument
    local -i result
    local result_label
    print-var argv
    if [[ $# -eq 0 ]]; then
        usage 'Bad input.' \
            '$prog "1 -lt 2"' \
            '$prog -v X "X -gt 0"'
    fi
    while [[ -n $1 ]]; do
#        if [[ $1 =~ '' ]]; then
            
#        fi
        
        builtin eval "[[ $1 ]]" &>/dev/null
        let result=$?
        case $result in
            0) result_label='%F{2}true%f'  ;;
            1) result_label='%F{1}false%f' ;;
            *) result_label='%F{3}invalid expression%f' ;;
        esac
        builtin print -P -- "[[ $1 ]]:  $result_label"
        shift
    done
    return 0
)}
