#!/bin/zsh

#  zfc
#  Z-Function
#
#  Created by Maxim Puchkov on 2020-04-23.
#  Copyright Â© 2020 Maxim Puchkov. All rights reserved.


# <#Function description#>
function zfc() {
    ## dir: go to z-functions directory [default] ##
    function zfc_dir() {
        cdp $zfunc
        return 0
    }
    
    ## find: Find Z-Function definition file ##
    function zfc_find() {
        local fdir="$1"
        local fname="$2"
        if [[ -z $fdir ]] || [[ -z $fname ]]; then
            echo "$(Info zfc_find): Function directory or function name is not defined."
            return 1
        fi
        f=$( find "$fdir" -name "$fname" )
        if [[ -z "$f" ]]; then
            echo "$(Info zfc_find): Function '$(Bad $fname)' not found."
            return 1
        fi
        echo "$f"
        return 0
    }
    
    ## localfunction: make a Z-Function local ##
    function zfc_localfunction() {
        local fname="$1"
        local target_dir="${2:-zshell}"
        local subdirs=($( ls -d $zfunc/z* ))
        local subdirs_names=(${subdirs:t})
        # Check output subdirectory in 'zsh/functions'
        if [[ $subdirs_names[(wi)$target_dir] -gt ${#subdirs_names} ]]; then
            echo "Subdirectory '$(Bad $target_dir)' is not found in:"
            print -C 4 "$subdirs"
            return 1
        fi
        # Find disabled function
        f=$( zfc_find "$DEV/Terminal/zsh/site-functions/" "$fname" )
        if [[ $? -ne 0 ]]; then
            echo "Function '$(Bad $fname)' is not a site function."
            return 1
        fi
        # Move function to an autoloaded directory
        mv "$f" "$zfunc/$target_dir/"
        echo "$(OK 'OK'): '$(bold $fname)' is now a local function."
        return 0
    }
    
    ## sitefunction: make a Z-Function accessible to all scripts ##
    function zfc_sitefunction() {
        local fname="$1"
        # Find an enabled function
        f=$( zfc_find "$zfunc" "$fname" )
        if [[ $? -ne 0 ]]; then
            echo "Function '$(Bad $fname)' is not a site function."
            return 1
        fi
        # Move function to 'zsh/function/disabled'
        mv "$f" "$DEV/Terminal/zsh/site-functions"
        echo "$(OK 'OK'): '$(bold $fname)' is now a site function."
        return 0
    }
    
    ## enable: enable a Z-Function ##
    function zfc_enable() {
        local fname="$1"
        local target_dir="${2:-zshell}"
        local subdirs=($( ls -d $zfunc/z* ))
        local subdirs_names=(${subdirs:t})
        # Check output subdirectory in 'zsh/functions'
        if [[ $subdirs_names[(wi)$target_dir] -gt ${#subdirs_names} ]]; then
            echo "Subdirectory '$(Bad $target_dir)' is not found in:"
            print -C 4 "$subdirs"
            return 1
        fi
        # Find disabled function
        f=$( zfc_find "$zfunc/disabled" "$fname" )
        if [[ $? -ne 0 ]]; then
            echo "Function '$(Bad $fname)' is not disabled."
            return 1
        fi
        # Move function to an autoloaded directory
        mv "$f" "$zfunc/$target_dir/"
        echo "$(OK 'OK'): enabled '$(bold $fname)'."
        return 0
    }
    
    ## disable: disable a Z-Function ##
    function zfc_disable() {
        local fname="$1"
        # Find an enabled function
        f=$( zfc_find "$zfunc" "$fname" )
        if [[ $? -ne 0 ]]; then
            echo "Function '$(Bad $fname)' is not enabled."
            return 1
        fi
        # Move function to 'zsh/function/disabled'
        mv "$f" "$zfunc/disabled/"
        echo "$(OK 'OK'): disabled '$(bold $fname)'."
        return 0
    }
    
    ## statfull: list all enabled and disabled Z-Functions ##
    function zfc_statfull() {
        # Display enabled functions
        local fdirs=($( ls -d $zfunc/z* ))
        local enabled_list=()
        for fdir in $fdirs; do
            enabled_list+=($( ls -1G "$fdir" ))
        done
        b_greenbg 'ENABLED'
        print -C 4 ${(o)enabled_list}
        echo
        
        # Display disabled functions.
        local disabled_fdir="$zfunc/disabled"
        local disabled_list=$( ls -1G "$disabled_fdir" )
        b_redbg 'DISABLED'
        print -C 4 ${(o)disabled_list}
        echo
    }
    
    ## stat: display number of enabled and disabled Z-Functions ##
    function zfc_stat() {
        local on=($( printf '%s\n' $zfunc/z*/* ))
        local off=($( printf '%s\n' $zfunc/disabled/* ))
        local n_on=${#on}
        local n_off=${#off}
        local n_total=$(( $n_on + $n_off ))
        InfoSection 'Z-Functions'
        print -C 2 "Enabled: " "$n_on"
        print -C 2 "Disabled:" "$n_off"
        print -C 2 "Total:   " "$n_total"
    }
    
    local cmd=${1:-dir}
    shift ${+1}
    if [[ -z $cmd ]]; then
        cmd='try'
    fi
    
    if ( ! fn isdef ${0}_${cmd} ); then
        error "Unknown command: '$(Bad $cmd)'."
        return 127
    fi
    
    ${0}_${cmd} "$@"
    return $?
}
