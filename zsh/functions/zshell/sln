#!/bin/zsh

#  SLN
#  Z-Function
#
#  Created by admin on 2020-02-21.
#  Copyright Â© 2020 Maxim Punderlinehkov. All rights reserved.



function sln() {
    
    #
    function make_symbolic_link() {
        local link_source=${1:A}
        local link_target_dir=${2:A}
        local link_name=${opts[name]:-${link_source:t}}
        local link_target=$link_target_dir/$link_name
        
        # v link_source link_target_dir link_name link_target
        errif "-z '$link_source'"       "Source file is required."
        errif "-z '$link_target_dir'"   "Target directory is required."
        errif "! -e '$link_source'"     "Source not found: '$link_source'."
        errif "-e '$link_target'"       "Link '$link_target' already exists."
        
        ln -s $link_source $link_target
        echo "Symbolic link '$( green ${link_name} )' has been created in $( green ${link_target_dir:t} ) directory."
    }

    #MARK: - Public
    # List all functions.
    function sln_help() {
        echo "Usage:"
        echo "  $(b_bcyan $src) $(b_cyan '.') $(underline '/path/to/file')    - create symbolic link to 'file' in current directory."
        echo "  $(b_bcyan $src) $(b_cyan 'desk') $(underline '/path/to/file') - create symbolic link to 'file' on Desktop."
        echo "  $(b_bcyan $src) $(b_cyan 'check') $(underline '/path/to/dir') - check if 'dir' contains broken symbolic links."
        echo "  $(b_bcyan $src) $(b_cyan 'help') $(underline '')              - display help message."
        echo
        echo "Options:"
        echo "  $(b_cyan --name) - symbolic link name."
    }
    
    # Find broken symbolic links in a folder.
    function sln_check() {
        local dir=${${1:-.}:A}
        local links="$(\ls -ld $dir*(-@))" >& /dev/null
        local n="$( printf "$links" | wc -l )"
        if [[ $n -gt 0 ]]; then
            echo "$links"
        fi
        echo "Found ${(z)n} broken symbolic links in '$dir'."
    }
    
    # Create s-link on desktop.
    function sln_desk() {
        local src=$1
        local dir="$HOME/Desktop"
        make_symbolic_link "$src" "$dir"
    }
    
    # Create s-link in current directory.
    function sln_.() {
        local src=$1
        local dir=$( pwd -P )
        make_symbolic_link "$src" "$dir"
    }
    

    
    # Function options
    typeset -A opts
    set -A opts $( read_options "$@" )
    shift $( options_shift_distance "$@" )
    
    src=$( basename $0 )
#    get_options opts "$@"
    cmd=$1
    
    case $cmd in
        "")
            sln_help
            ;;
        *)
            shift
            ${src}_${cmd} "$@"
            local ecode=$?
            if [ $ecode = 127 ]; then
                echo "Unknown command: $(Bad $cmd) (Exit code $ecode)." >&2
            fi
            ;;
    esac
    
}
