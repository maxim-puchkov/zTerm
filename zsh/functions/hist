#!/bin/zsh

#  hist
#  Z-Function
#
#  Created by Maxim Puchkov on 2020-04-17.
#  Copyright Â© 2020 Maxim Puchkov. All rights reserved.


# Function hist:
#   Find all history events which match the pattern.
#   If pattern is not specified, then print the most
#   most recent history events.
#
# Synopsis:
#   hist
#   hist [-c count] [pattern]
function hist() {
  # Length and Arrangement of event list
  typeset fc_list_count='-25'
  
  # Options
  while [[ $1 =~ '^[-]' ]]; do
    case $1 in
      # -c: file count in listings
      (-c|--count)
        fc_list_count="$2"
        shift
      ;;
      
      # Skip '--'
      (--) shift; break ;;
    esac
    shift
  done
  
  () {
    builtin fc -l $fc_list_count
  } 
  
}
#
#  # History event search pattern
#  typeset pattern
#  pattern="$argv"
#
#  () {
##    cat <$1
#    if [[ -n $pattern ]]; then
##      /usr/bin/egrep -e $pattern --color='always' <$1
#    fi
#  } =(builtin fc -l $fc_list_count)
#
#  return 0
#}


#
#  #
#  while [[ -n $1 ]]
#  do
#    # Find ALL events in the history which match the specified pattern.
#    # If pattern is not set, then show 25 most recent events.
#    if [[ -n $pattern ]]
#    then
#      builtin fc -l 1- |
#        /usr/bin/egrep --color='always' -e $pattern
#    else
#      builtin fc -l -25
#    fi
#  done
  
#}


#function hist() {
#    local pattern="$1"
#    local n=${2:-1000}
#    if [[ -z $pattern ]]; then
#        n=25
#    fi
#    fc -l -${n} |
#        grep --color -i -E "$pattern"
#    return 0
#}
