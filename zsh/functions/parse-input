#!/bin/zsh

#  parse-input
#  Z-Function
#
#  Created by Maxim Puchkov on 2020-05-31.
#  Copyright Â© 2020 Maxim Puchkov. All rights reserved.
 

#
function parse-input() {
    typeset -a 
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    return 1234




    zmodload zsh/zutil ||
        return 1
    
    local stderr=/dev/null
#    if [[ $1 == '-v' ]]; then
#        stderr=/dev/stderr
#        shift
#    fi
    
    flag_names=()
    if [[ $1 == '-f' ]]; then
        shift
        while [[ $# -ne 2 ]] && [[ $1 =~ '^[^\-]' ]]; do
            flag_names+=($1)
            shift
        done
    fi
    
#    while [[ -n $1 ]] && [[ $1 =~ '^\-' ]]; do
#        case $1 in
#        esac
#        shift
#    done
    
    
  { local optlist_id=$1
    local argv_id=$2
    
    typeset -a arguments oid fid oflist
    arguments=( ${(Pz)argv_id} )
    oid=( ${arguments:#[^-]*} )
    fid=()
    for flag in $flag_names; do
        fid+=( ${oid[(R)*$flag]} )
    done
    oid=( ${oid:|fid} )
    oid=( ${^oid}':' )
    oflist=( ${^oid/-} ${^fid/-} )
    
    if [[ -z $oflist ]]; then
        return 1
    fi
    
    set -- $arguments
    typeset -A tmp
    zparseopts -D -E -A tmp $oflist #2>$stderr
    
    typeset -A result
    local k v
    for k v in ${(kv)tmp}; do
        k=$( awk -F '^\-+' '{ print $2; }' <<< $k )
        v=${v:-'true'}
        result+=( $k $v )
    done
    
    typeset -Ag $optlist_id;
    set -A $optlist_id ${(kv)result}
    
    local argv_shift=$(( ${#fid} + (${#oid} * 2) ))
    typeset -ag $argv_id
    set -A $argv_id ${arguments:$argv_shift}
  } 2>$stderr
    
    return 0
}
