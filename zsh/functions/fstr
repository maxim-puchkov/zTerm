#!/bin/zsh

#  fstr
#  Z-Function (5)
#
#  Created by Maxim Puchkov on 2020-04-27.
#  Copyright Â© 2020 Maxim Puchkov. All rights reserved.


# Find strings (or patterns) in files
function fstr() {
    if [[ $# -eq 0 ]] return 2
    
    # String, directory, and depth
    local search_directory="${${1:-.}:a}"
    local string="$2"
#    local depth="${3:+-maxdepth $3}"
    
    # Files in the directory
    typeset -a files=(${(@f)"$(
        find $search_directory -type f
    )"})
#                              ${(z)depth} ))
    typeset -i n_files=${#files}
    typeset -i n_matches=0
    
    # Find matching files
    local file match
    for file in $files; do
        match=$( colorize_grep 'byellow' \
            egrep --color='always'       \
                  --ignore-case          \
                  --text                 \
                  --regexp "$string"     \
                  -- $file )
        if [[ -n "$match" ]]; then
            n_matches=$(( $n_matches + 1 ))
#            printf "$(bluebg '[%d] %s')\n" $n_matches "$file"
            print -P "%B%K{11}%F{16} [$n_matches]  $file %f%k%b"
            printf '%s\n\n' "$match"
        fi
    done
    
    # Display number of matches and files
    printf "$(blue '%d') out of $(blue '%d') files match.\n" $n_matches $n_files
    return 0
}
