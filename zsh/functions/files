#!/bin/zsh

#  files
#  devx
#
#  Created by admin on 2020-03-10.
#  Copyright Â© 2020 Maxim Puchkov. All rights reserved.


# Count matching files in a directory.
function files() {
    typeset -ag files
    #
    function files_count() {
        local in_dir="${${1:-.}:a}"
        local filename="$2"
        if [[ ! -e "$in_dir" ]]; then
            error "Directory not found: $in_dir."
            return 1
        fi
        cd -q "$in_dir"
        local regex="^\.\/${filename}[[:alnum:]_\.\-]*"
        echo $( find . ! -name . -prune -print | grep -i -E "$regex" -c )
        cd -q "$OLDPWD"
    }
    
    # 
    function files_find() {
        local filename=$1
        local found=$( find . \
            -iname $filename  \
            -mindepth 1       \
            -maxdepth 1       \
            -and \( -type f -or -type l \) \
            2>/dev/null )
        if [[ -z $found ]]; then
            return 1
        fi
        printf '%s\n' "$found"
        return 0
    }
    
    function files_f() (
        files list $1
        echo $files
        echo $files[(r)*/$f]
        
    )
    
    #
    function files_list() {
        local dir=${${1:a}:-$PWD}
        local var_id=${2:-files}
        files=(${(@f)"$(find $dir -mindepth 1 -maxdepth 1)"})
#        typeset -ag $var_id=(${(@f)"$(find $dir -mindepth 1 -maxdepth 1)"})
#typeset -a $var_id
#        set +A $var_id=(${(@f)"$(find $dir -mindepth 1 -maxdepth 1)"})

    }
    
    function files_images() {
        typeset -a extensions=('jpg' 'png' 'gif' 'webp' 'svg'
                               'psd' 'raw' 'bmp' 'tiff' 'ai')
        local ext_regex="(${(j:|:)extensions})"
        find -E . -iregex ".*\.${ext_regex}" 2>/dev/null
    }
    
    function files_0() {
        typeset -i n_bytes=${1:-1}
        for i in {1..$n_bytes}; do
            printf '%b' '\x00'
        done
    }
    
    function files_wb() {
        buffer="${*// }"
        current_byte=0
        while [[ $(( $current_byte + 2 )) -le $#buffer ]]; do
            byte=${buffer:$current_byte:2}
            printf "\x$byte"
            current_byte=$(( $current_byte + 2 ))
        done
#        for byte in $@; do
#
#        done
    }
    
    
    if [[ $# -eq 0 ]]; then
        fn print-commands $0
        return 2
    fi
    
    if [[ $# -eq 1 ]] && ( ! fn isdef ${0}_${1} ); then
        files find $1
        return $?
    fi
    
    local cmd=$1
    shift
    ${0}_${cmd} "$@"
    return $?
}
