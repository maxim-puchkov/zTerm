#!/bin/zsh

#  brew_browse
#  Z-Function (3)
#
#  Created by Maxim Puchkov on 2020-04-26.
#  Copyright Â© 2020 Maxim Puchkov. All rights reserved.


# <#Function description#>
function brew_browse() {
    function print_h1() {
        printf "$(cyan $(underline '%s'))\n" "$*"
    }
    function print_h2() {
        printf "$(grey '%s')" "$*"
    }
    
    local keyword=$1
    local search=$( brew desc -s -- '*' | grep --color='always' -i -E "$keyword" )
    local -a result=( ${(f)search} )
    
    local n_results=${#result}
    local interval=5
    
    typeset -Ag install_formulae
    typeset -a installed
    installed=( $(greenbg $(bblack $(brew list))) )
#    printf '%s\n' $installed | sed -e "s/.*/$(greenbg $(bblack '&'))/g"
    result=(${result:|insttalled})
    result+=( $installed )
    
    local i=0
    while [[ $i -lt $n_results ]]; do
        local j=0
        for j in {1..$interval}; do
            local index=$(( $i + $j ))
            if [[ $index -gt $n_results ]]; then
                break
            fi
            local cmd=${result[$index]}
            printf "$(blue '(%d/%d)')\t%s\n" $index $n_results "$cmd"
        done
        echo
        
        i=$(( $i + $interval ))
        read -s -r -k 1 char
        case $char in
            # Abort
            a)  print_h1 "Abort"
                return 134
                ;;
            # Quit
            q)  print_h1 "Quit"
                break
                ;;
            # Select formulae to install
            s)  print_h1 "Select formulae to install"
                print_h2 "Indicies (0 to cancel):  "
                read input;
                local -a formulae_numbers=( ${(os: :)input} )
                
                if [[ -z ${formulae_numbers[(R)0]} ]]; then
                    integer num=0
                    for num in $formulae_numbers; do
                        local cmd=$( colrm <<< $result[$num] )
                        if [[ $num -le $i ]] && [[ -n $cmd ]]; then
                            local cmd_name="${cmd%':'*}"
                            printf "%s $(green %s)[%d]\n" "$(pass)" "$cmd_name" $num
                            install_formulae+=( $cmd_name $cmd )
                        else
                            printf '%s Ignored %d\n' "$(fail)" $num
                        fi
                    done
                else
                    printf 'Cancelled.\n'
                fi
                ;;
            # Adjust Interval
        [0-9])  interval=$char
                ;;
        esac
    done
    
    if [[ ${(k)#install_formulae} -eq 0 ]]; then
        return 0
    fi
    
    print-line
    printf "Install %d formulae? (yes/$(bold 'no'))\n" ${(k)#install_formulae}
    printf '%s\n' ${(k)install_formulae}
    read should_install
    if [[ $should_install == 'yes' ]]; then
        brew install ${(k)install_formulae};
    fi
    return 0
}
