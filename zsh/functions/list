#!/bin/zsh

#  list
#  Z-Function (53)
#
#  Created by Maxim Puchkov on 2020-06-03.
#  Copyright Â© 2020 Maxim Puchkov. All rights reserved.


# <#Function description#>
function list() {
    default base_options $(alias_value ls | cut -d '-' -f2)
    default time_regex $(< $zterm/etc/ls-time.regex)
    
    (
        function header() {
            builtin print -P -- "%B%K{11}%F{16} ${(U)argv}%b\t" \
                "(ls${:- ${flags}}) %k%f" >&2
        }
        function do_ls() {
            typeset flags=$1
            shift
            script -q /dev/null command ls ${=flags} "$@"
        }
        function do_grep() {
            colorize_grep 'b_green' \
                egrep --color='always' "$@"
        }
        
        ## tc: time of creation ##
        function list_tc() {
            flags="-lTUrt${base_options}"
            header 'File creation time'
            do_ls $flags "$@" |
                do_grep --regexp $time_regex
        }
        ## tch: time of change ##
        function list_tch() {
            flags="-lTcrt${base_options}"
            header 'File change time'
            do_ls $flags "$@" |
                do_grep --regexp $time_regex
        }
        ## tm: time of modification ##
        function list_tm() {
            flags="-lTrt${base_options}"
            header 'Modification time'
            do_ls $flags "$@" |
                do_grep --regexp $time_regex
        }
        ## ta: time of access ##
        function list_ta() {
            flags="-lTrtu${base_options}"
            header 'File access time'
            do_ls $flags "$@" |
                do_grep --regexp $time_regex
        }

        ## f: file flags ##
        function list_f() {
            flags="-lO${base_options}"
            header 'File flags'
            () {
                local awk_flags=($(awk '{ print $5; }' "$1"))
                shift
                do_ls $flags "$@" |
                    do_grep --regexp " (${(j:|:)awk_flags}) "
            } =( command ls $flags "$@" ) "$@"
        }
        ## S: file size ##
        function list_S() {
            flags="-lSr${base_options}"
            header 'File size'
            do_ls -lFGHShr "$@" |
                do_grep --regexp '([0-9][\.0-9]*)[BKMG]'
        }
        
        ## all: all files ##
        function list_all() {
            flags="-la${base_options}"
            header 'All files'
            do_ls $flags "$@"
        }
        
        
        # When 'list' is run without arguments,
        # run the 'list all' command
        typeset cmd
        if [[ -n $1 ]]; then
            cmd=$1
            shift
        else
            cmd='all'
        fi
        
        # Check that command is defined
        if [[ ${+functions[${0}_${cmd}]} -ne 1 ]]; then
            error -127 'Command not found: $cmd.'
            fn print-commands $0
        fi
        ${0}_${cmd} "$@"
    )
    
    return $?
}
