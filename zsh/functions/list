#!/bin/zsh

#  list
#  Z-Function (53)
#
#  Created by Maxim Puchkov on 2020-06-03.
#  Copyright Â© 2020 Maxim Puchkov. All rights reserved.


# <#Function description#>
function list() {
    trap "unfunction -m '${0}_*'" EXIT
    
    function list-ls() {
        typeset flags=$1
        shift
        script -q /dev/null command ls ${=flags} "$@"
    }
    function list-grep() {
        colorize_grep 'b_green' \
            egrep --color='always' "$@"
    }
    
    ## tc: time of creation ##
    function list_tc() {
        print_h1 'File creation time'
        blue $time_regex
        list-ls -lFGHTUhrt "$@" |
            list-grep --regexp $time_regex
    }
    ## tch: time of change ##
    function list_tch() {
        print_h1 'File change time'
        list-ls -lFGHTchrt "$@" |
            list-grep --regexp $time_regex
    }
    ## tm: time of modification ##
    function list_tm() {
        print_h1 'Modification time'
        list-ls -lFGHThrt "$@" |
            list-grep --regexp $time_regex
    }
    ## ta: time of access ##
    function list_ta() {
        print_h1 'File access time'
        list-ls -lFGHThrtu "$@" |
            list-grep --regexp $time_regex
    }
    
    ## f: file flags ##
    function list_f() {
        print_h1 'File flags'
        () {
            local flags=($(awk '{ print $5; }' "$1"))
            shift
            list-ls -lFGHOh "$@" |
                list-grep --regexp " (${(j:|:)flags}) "
        } =( command ls -lFGHOh "$@" ) "$@"
    }
    ## S: file size ##
    function list_S() {
        print_h1 'File size'
        list-ls -lFGHShr "$@" |
            list-grep --regexp '([0-9][\.0-9]*)[BKMG]'
    }
    
    
    
    
    if [[ ! -v time_regex ]]; then
        typeset -a months
        typeset m
        for m in $langinfo[(I)ABMON_*]; do
            months+=($langinfo[$m])
        done
        # "[0-9]{1,2} [A-Z][a-z]{2} [0-9\:]{8} [0-9]{4}"
        time_regex="[1-9][0-9]?\s+(${(@j:|:)months})\s+[0-9:]+\s+[1-2][0-9]{3}"
        export time_regex
    fi
    
    typeset cmd=$1
    if ! isdef ${0}_${cmd}; then
        error -127 "Command not found: %F{1}${cmd}%f."
    fi
    shift
    ${0}_${cmd} "$@"
}
