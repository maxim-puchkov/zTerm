#!/bin/zsh

#  list
#  Z-Function (53)
#
#  Created by Maxim Puchkov on 2020-06-03.
#  Copyright Â© 2020 Maxim Puchkov. All rights reserved.


# <#Function description#>
function list() {
    trap "
        unfunction -m '${0}_*';
        unfunction -m '__${0}_*';
    " EXIT
    
    function __list_ls() {
        typeset flags=$1
        shift
        script -q /dev/null command ls ${=flags} "$@"
    }
    function __list_grep() {
        colorize_grep 'b_green' \
            egrep --color='always' "$@"
    }
    
    ## tc: time of creation ##
    function list_tc() {
        print_h1 'File creation time'
        __list_ls -lFGHTUhrt "$@" |
            __list_grep --regexp $time_regex
    }
    ## tch: time of change ##
    function list_tch() {
        print_h1 'File change time'
        __list_ls -lFGHTchrt "$@" |
            __list_grep --regexp $time_regex
    }
    ## tm: time of modification ##
    function list_tm() {
        print_h1 'Modification time'
        __list_ls -lFGHThrt "$@" |
            __list_grep --regexp $time_regex
    }
    ## ta: time of access ##
    function list_ta() {
        print_h1 'File access time'
        __list_ls -lFGHThrtu "$@" |
            __list_grep --regexp $time_regex
    }
    
    ## f: file flags ##
    function list_f() {
        print_h1 'File flags'
        () {
            local flags=($(awk '{ print $5; }' "$1"))
            shift
            __list_ls -lFGHOh "$@" |
                __list_grep --regexp " (${(j:|:)flags}) "
        } =( command ls -lFGHOh "$@" ) "$@"
    }
    ## S: file size ##
    function list_S() {
        print_h1 'File size'
        __list_ls -lFGHShr "$@" |
            __list_grep --regexp '([0-9][\.0-9]*)[BKMG]'
    }
    
    ## all: all files ##
    function list_all() {
        print_h1 'All files'
        __list_ls -lFGHah "$@"
    }
    
    
    default time_regex $(< $zdot/etc/ls-time.regex)
    
    typeset cmd=${1:-'all'}
    if ! isdef ${0}_${cmd}; then
        error -127 "Command not found: %F{1}${cmd}%f."
    fi
    shift
    ${0}_${cmd} "$@"
}
