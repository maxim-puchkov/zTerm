#!/bin/zsh

#  Cryptography
#
#
#  Created by mpuchkov on 2020-01-28.
#  Copyright Â© 2020 Maxim Puchkov. All rights reserved.

<< EOS
"lin doc"
EOS


#MARK: - Caesar Cipher
function lin() {
    ciphertext=${1? Ciphertext not set} # c, message to decode
    eng="$2"
    cip="$3"
    # #1 -- letter values in cipher
    input=()
    n=${#eng}
    for i in {1..$n}; do
        l=$(letter ${eng[$i]})
        echo $i $l
        input+=($l)
    done

    # freq -- letters in English
    freq=()
    if [[ -z $cip ]]; then
        freq=( $(letter 'e') $(letter 't') )
    else
        n2=${#cip}
        for i in {1..$n2}; do
            l=$(letter ${cip[$i]})
            echo $i $l
            freq+=($l)
        done
    fi;
    # a*l
    sh1="a * $freq[1] + b = $input[1]"
    sh2="a * $freq[2] + b = $input[2]"
    
    echo $sh1
    echo $sh2
    
#
#
##    for i in {0..1}; do
##        for j in {0..1}; do
##            if [[ $i -eq $j ]]; then
##                echo "skipping ="
##                continue
##            fi
##            print -c "i = $i" "j = $j"
##
##            for k in {0..1}; do
##                print "sub letter k = $k"
##            done
##        done
##    done
##
#    for i1 in {0..1}; do
#        for i2 in {0..1}; do
#            if [[ $i1 -eq $i2 ]]; then
#                echo "skipping i1 = i2"
#                continue
#            fi
#            for j1 in {0..3}; do
#                for j2 in {0..0}; do
#                    if [[ $j1 -eq $j2 ]]; then
#                        echo "skipping j1 = j2"
#                        continue
#                    fi
#                    print -c "($i1, $j1)" "($i2, $j2)"
#                done
#            done
#        done
#    done
    
}
