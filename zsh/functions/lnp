#!/bin/zsh

#  lnp
#  Z-Function (34)
#
#  Created by Maxim Puchkov on 2020-05-16.
#  Copyright Â© 2020 Maxim Puchkov. All rights reserved.


# <#Function description#>
function lnp() {
    # Print error message
    function ${0}-error() {
        typeset program_name=${0%%-*}
        typeset code=1
        if [[ $# -gt 1 ]]; then
            code=$1
            shift
        fi
        error -$code --title "$program_name" \
              --no-autocapitalize --highlight "$@"
        return $?
    }
    
    #
    function lnp-message() {
        print -P -- " %U${1}%u  %F{2}%B~~>%b%f  %U${2}%u"
    }
    
    # Link files
    function lnp-link() {
        ln_source=${argv:1:-1}
        ln_target=${argv[-1]}
        /bin/ln ${(k)=optlist} -- $ln_source $ln_target
        typeset exit_code=$?
        if [[ -d $ln_target ]]; then
            local l
            for l in ${=ln_source}; do
                lnp-message "${(D)l}" "${(D)ln_target}/${l:t}"
            done
        else
            lnp-message "${(D)ln_source}" "${(D)ln_target}"
        fi
        return $exit_code
    }
    
    # Check source files
    function lnp-get-source-files() {
        typeset -a valid_files=()
        for ln_source in $argv; do
            # Check if source file exists
            if [[ ! -e $ln_source ]]; then
                lnp-error 'no such file or directory: $ln_source.'
                continue
            fi
            # Check if target file already exists
            local file=$ln_target
            if [[ -d $ln_target ]]; then
                file=$ln_target/$ln_source
            fi
            if [[ -e $file ]]; then
                lnp-error 'file ${file} already exists.'
                continue
            fi
            valid_files+=($ln_source)
        done
        print -- $valid_files
    }
    
    
    #MARK: - Options
    typeset -Ag optlist
    get-arguments -A optlist -f 'F,f,h,i,n,s,v' -- $argv
    
    typeset ln_target=$PWD
    #MARK: - Arguments
    case $# in
        # No arguments (ln)
        0)  /bin/ln -h
        ;;
        # One argument (ln SOURCE_FILE)
        1)  ln_target=${ln_target}/${1:t}
            ln_source=$(lnp-get-source-files $1)
            if [[ -n $ln_source ]]; then
                lnp-link $ln_source $ln_target
            fi
        ;;
        # Two arguments (ln SOURCE_FILE TARGET_FILE)
        2)  ln_target=${2:a}
            ln_source=$(lnp-get-source-files $1)
            if [[ -n $ln_source ]]; then
                lnp-link $ln_source $ln_target
            fi
        ;;
        # More than two arguments (ln SOURCE_FILE... TARGET_FILE)
        *)  ln_target=${argv[-1]:a}
            if [[ ! -e $ln_target ]]; then
                lnp-error 'no such file or directory: $ln_target.'
                return 1
            fi
            if [[ ! -d $ln_target ]]; then
                /bin/ln -h
                return 1
            fi
            # List of files
            typeset ln_source
            ln_source="$(lnp-get-source-files ${argv:1:-1})"
            if [[ -n $ln_source ]]; then
                lnp-link $ln_source $ln_target
            fi
        ;;
    esac

    unfunction -m "${0}-*"
    return $?
}
