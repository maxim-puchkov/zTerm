#!/bin/zsh

#
#
#
#
#


# NAME
#   mkzsh
#
# SYNOPSIS
#   mkzsh -[dox] <file> [description]
#
# DESCRIPTION
#   Make a zsh script.
function mkzsh() {
  local -A opts
  local -a specs=(
    '-delete'     'd=-delete'
    '-open'       'o=-open'
    '-executable' 'x=-executable'
  )
  zparseopts -D -F -M -A opts - $specs
  if [[ $# -eq 0 ]]; then
    error -m 'not enough arguments'
  fi
  local file=${1:A}
  # -d: delete existing file.
  if [[ ${+opts[--delete]} -eq 1 ]]; then
    if [[ ! -e $file ]]; then
      error -m 'file does not exist: ${file}'
    fi
    () {
      command stat -lF $file 2>/dev/null \
      && command rm -i $file
    } || return
  fi
  # Error if file exists.
  if [[ -e $file ]]; then
    error -m 'file already exists: ${file}'
  fi
  # Write command path and header comment to file.
  printf '%s\n\n' "#!/bin/zsh" > $file
  file_header $file "Generated by $0 at %D{%I:%M%p}." >> $file
  # -x: make executable.
  if [[ ${+opts[--executable]} -eq 1 ]]; then
    command chmod +x $file
  fi
  # -o: open file for editing.
  if [[ ${+opts[--open]} -eq 1 ]]; then
    command open -t $file
  fi
}


# NAME
#   file_header
#
# SYNOPSIS
#   file_header <file> [description]
#
# DESCRIPTION
#   Generate header comment for a file.
function file_header() {
  local file=$1
  if [[ ! -e $file ]]; then
    error -1 -m 'file does not exist: ${file}.'
  fi
  local file_path="$(print -D -- ${file:A})" file_description="${@:2}"
  local sfmt='Created by %Su/%u:%g on %SB.' tfmt='%B %d, %Y'
  local file_created_on="$(command stat -t $tfmt -f $sfmt $file)"
  command cat <<EOF
#  ${file:t}
#  ${(%)file_description}
#
#  ${file_created_on}
#  ${file_path}
EOF
}







function fn_source() {
  while [[ -n $1 ]]; do
    if [[ ${+functions[$1]} -eq 0 ]]; then
      error -1 -m '${1} is not a function'
    fi
    if [[ -z $functions_source[$1] ]]; then
      autoload +X $1 # &>/dev/null
    fi
    print -- $functions_source[$1]
    shift
  done
}
