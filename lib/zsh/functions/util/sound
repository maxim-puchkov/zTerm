#!/bin/zsh

#  sound
#  /usr/local/zterm/zsh/functions (id: 84)
#
#  Generated by 'ztemplate' (zterm/zsh/sources) on 2020-10-15
#  Copyright Â© 2020 Maxim Puchkov. All rights reserved.


# sound
#
# Play audio files.
#
# Usage:
# sound
# sound [name]
emulate -LR zsh


# Options for 'afplay'
## -v, --volume   :: Set the volume for playback --
#-                -- of the file
## -h, --help     :: Print help
## --leaks        :: Run leaks analysis
## -t, --time     :: Play for TIME seconds
## -r, --rate     :: Play at playback rate
## -q, --rQuality :: Set the quality used for rate-scaled --
#-                -- playback (default is 0 - low quality)
## -d, --debug    :: Debug print output :: ( A B C D E )
local -A afplay_opts
local -a specs=(
  '-volume:'   'v:=-volume:'    '-help'  'h=-help'    '-leaks'
  '-time:'     't:=-time:'      '-rate:' 'r:=-rate:'
  '-rQuality:' 'q:=-rQuality:'  '-debug' 'd=-debug'
)
if [[ $# -gt 0 ]] &&
   {! zparseopts -D -E -K -M -A afplay_opts - $specs}; then
  return 1
fi


# Location of sounds files and default sound name.
export DEFAULT_SOUND="Purr"
local dir='/System/Library/Sounds'
local ext='aiff'
local -a sounds=( ${dir}/*(:t:r:l) )


# Set name of sound file (basso, ping, pop, etc.).
local sound=${sounds[${1:-0}]}
# Select a sound if argument name was null or invalid.
if [[ -z "$sound" ]]; then
  local -i min=1 max=${#sounds}
  select sound in $sounds; do
    if [[ -n "$sound" ]]; then break; fi
    print -Pf 'Enter a number between %s and %s\n' -- \
              "%F{4}${min}%f" "%F{4}${max}%f"
  done
fi


# Set path to the sound file and play it.
local soundfile="${dir}/${(C)sound}.${ext}"
if [[ ! -e "$soundfile" ]]; then
  soundfile="${dir}/${(C)DEFAULT_SOUND}.${ext}"
fi
/usr/bin/afplay ${(kv)afplay_opts} $soundfile &!
return $?
