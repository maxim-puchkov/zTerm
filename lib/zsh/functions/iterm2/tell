#!/bin/zsh

#  tell
#  zTerm (id: 58)
#
#  Generated by 'zfn' on 2020-10-23
#  Copyright Â© 2020 Maxim Puchkov. All rights reserved.


# tell
#
# Run AppleScript commands.
#
# Usage:
# tell [--echo] [--line] [ -[ap] ] [--pref] [--plist]
emulate -LR zsh


# Function options
local -A opts
local -a specs=('-echo' '-line')
if [[ $# -gt 0 ]] &&
   {! zparseopts -D -K -A opts - $specs}; then
  return 1
fi


# If '--line' is set
if [[ ${+opts[--line]} -eq 1 ]]; then
  set -- ${argv//;/'\n'}
fi

# Generate statements with options
local -a statements=()
while [[ "$1" =~ ^[-] ]]; do
  case $1 in
    (-a)
      statements+='tell application "'$2'" to'
      shift ;;
    (-p)
      statements+='tell process "'$2'" to'
      shift ;;
    (--pref)
      statements+='tell '$2' preferences to'
      shift ;;
    (--plist)
      statements+='return its properties' ;;
    
    # (-...) statements+=''  ;;
  esac
  shift
done
[[ "$1" == "--" ]] && shift


# Generate statements with arguments
if [[ ${#statements} -eq 0 ]]; then
  statements=('tell')
fi
if [[ ${#argv} -gt 0 ]]; then
  statements+=($argv)
fi
if [[ ${#statements} -eq 0 ]]; then
  error -1 'no commands to tell'
fi


# If '--echo' is set
if [[ ${+opts[--echo]} -eq 1 ]]; then
  print -P -- "%F{6}%U${0}%u%f command: ${(qq)statements}"
fi

# Run AppleScript statements.
/usr/bin/osascript -e "$statements"
return 0
