#!/bin/zsh

#  cd
#  zTerm(1) function
#
#  Created by mpuchkov on 2020-01-30.
#  Copyright Â© 2020 Maxim Puchkov. All rights reserved.


# cd (previously: cdp)
#
# Change working directory, then print new worknig
# directroy and list its contents.
#
# Usage:
# `cd [ -qsLP ] [ dir ]'
# `cd [ -qsLP ] old new'
# `cd [ -qsLP ] {+|-}num'
emulate -LR zsh


# Options
typeset -A optlist
zparseopts -D -E -A optlist - q s L P


# Arguments
local dir
case $# in
    # No arguments (`cd')
    0)  dir=$HOME ;;
    
    # One argument (`cd DIR')
    1)  local arg=$1
        if [[ "$arg" == '-' ]]; then
          arg='-1'
        fi
        if [[ "$arg" =~ ^[-+][0-9]+ ]]; then
          local stack_index
          case ${arg[1]} in
            '-') stack_index=${arg:1}  ;;
            '+') stack_index=$(( ${#dirstack} - ${arg:1} ))  ;;
          esac
          dir=${dirstack[$stack_index]}
          if [[ -z $dir ]]; then
            error -1 'entry ${stack_index} is not in dir stack.'
            return 1
          fi
        else
          dir="${arg}"
        fi ;;
    
    # Two arguments (`cd OLDDIR NEWDIR')
    2)  local old=$1 new=$2
        if [[ ! "$PWD" =~ $old ]]; then
          error -1 -m 'string ${old} in not in ${PWD}.'
        fi
        dir="${PWD//$old/$new}" ;;
    
    # More than two arguments
    *)  error -2 'too many arguments.' ;;
esac


# Do nothing if directory is the same
# as the current working directory
if [[ "${dir:A}" == "${PWD:A}" ]]; then
  return 0
fi



#MARK: - Test Errors
# Directory does not exist
if [[ ! -e $dir ]]; then
  error -1 -m 'no such file or directory: ${dir}.'
fi
# File exists but is not a directory
if [[ ! -d $dir ]]; then
  error -1 -m '${dir} is not a directory.'
fi
# Directory is not readable
if [[ ! -r $dir ]]; then
  error -1 -m 'access denied: ${dir}.'
fi




# Change directory
builtin cd ${(k)optlist} $dir &>/dev/null
if [[ $? -ne 0 ]]; then
  error -1 -m 'cannot change directory to ${dir}.'
  return 1
fi

if [[ ${+optlist[-q]} -ne 1 ]] &&
   [[ -t 1 ]]; then
  print -P -- "Directory changed to %F{2}${PWD}%f.\n"
  /bin/ls -l -BFGHhk
fi


return 0
