#!/bin/zsh

#  plist
#  zTerm (id: 48)
#
#  Generated by 'zfn' on 2020-10-21
#  Copyright Â© 2020 Maxim Puchkov. All rights reserved.


# plist
#
# Edit and display property list files.
#
# Usage:
# ...
emulate -LR zsh


# Function options
local -A opts
opts=( [--depth]=0 )
local -a specs
specs=( ${(k)^opts#-}':' )
if [[ $# -gt 0 ]] &&
   {! zparseopts -D -K -M -A opts - $specs}; then
  return 1
fi



# plist indentation
function plist_indentation() {
  local -i depth=${1:=0}
  local indent=""
  local indent_1=$'\t'
  local -i i=0
  while [[ $i -lt $depth ]]; do
    indent+=$indent_1
    let i="$i + 1"
  done
  printf '%s\n' "$indent"
  return 0
}

# plist print: print property list file.
function plist_print() {
  if [[ $# -eq 0 ]]; then
    error -1 -m 'property list file is not specified'
  fi
  /usr/libexec/PlistBuddy -x -c 'print' $1
  return $?
}

# plist count: count objects in property list.
function plist_count() {
  local keytype=$1
  local depth=$2
  
}




# plist dict:
function plist_dict() {
  local keypath=$1
  if [[ -z "$keypath" ]]; then
    grep -e 'Dict'
    return 0
  fi
  
  if [[   -p /dev/stdin ]] ||
     [[ ! -t 0 ]]; then
    echo plutil -extract $keypath xml1 -o - -- -
  fi
}



local subcommand="${1}"
shift
if [[ ${+functions[${0}_${subcommand}]} -eq 0 ]]; then
  error -127 -m 'no such command: ${subcommand}'
fi
${0}_${subcommand} ${argv}


