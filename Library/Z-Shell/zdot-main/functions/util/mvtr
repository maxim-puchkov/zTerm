#!/bin/zsh

#  mvtr
#  zTerm (id: 106)
#
#  Generated by 'zfn' on 2020-10-29
#  Copyright Â© 2020 Maxim Puchkov. All rights reserved.


# mvtr
#
# Move files to Trash.
#
# Usage:
# mvtr [ -[nv] ] file...
emulate -LR zsh
autoload -Uz error

typeset PROG="${0##/*}"
typeset TRASH_DIR="${TRASH_DIR:=$HOME/.Trash}"




# Function options.
# @define option
# @define arg *: :_files
# @annotation option @opt
#
# @opt -n: Print total number of files moved to Trash.
# @opt -v: Print names of files as they are moved to Trash.
local -A opts
local -a specs
specs=('n' 'v')
if [[ $# -gt 0 ]] &&
   {! zparseopts -D -K -M -A opts - $specs}; then
  return 1
fi




# Function arguments.
if [[ $# -eq 0 ]]; then
  error -1 -m 'not enough arguments'
fi


# Move each file.
local file
local -i n_moved=0
for file; do
  # Check file.
  if [[ ! -e $file ]]; then
    error -1 -m 'file does not exist: ${file}'
  fi
  if [[ "$file" == "$TRASH_DIR" ]]; then
    error -1 -m 'cannot move ${file} to Trash.'
  fi
  if [[ "${file:h}" =~ "$TRASH_DIR" ]]; then
    error -1 -m 'file is already in Trash: ${file}'
  fi
  
  
  # Name of the file in Trash.
  local trash_file="$TRASH_DIR/${file:t}"
  local -i count=0
  # If file "name" already exists in Trash,
  # try "name copy 1", "name copy 2", etc.
  while [[ -e $trash_file ]]; do
    let count="$count + 1"
    trash_file="$TRASH_DIR/${file:t} copy $count"
  done
  
  # Move file to Trash.
  /bin/mv -n -- $file $trash_file &&
  let n_moved="$n_moved + 1"
  
  
  # -v: print names of moved files.
  if [[ ${+opts[-v]} -eq 1 ]]; then
    print -Pf "%s: %s --> %s\n" \
           -- "%F{blue}$PROG%f" "$file" "%F{red}$trash_file%f"
  fi
done




# -n: print number of moved files.
if [[ ${opts[-n]} -eq 1 ]]; then
  print -Pf "%s: %i files were moved to Trash\n" \
         -- "%F{blue}$PROG%f" $n_moved
fi


return "$n_moved == 0"
