#!/bin/zsh

#  setarray
#  /usr/local/zterm/zsh/functions (id: 32)
#
#  Generated by 'ztemplate' (zterm/zsh/sources) on 2020-10-10
#  Copyright Â© 2020 Maxim Puchkov. All rights reserved.


# setarray
#
# Read file and store each text line in a named parameter.
# If a line is empty, contains only whitespace characters,
# or matches the comment pattern (default: begins with the
# '#' symbol), it is ignored and is not stored in the array.
#
# Usage:
# setarray [--type [aA]] [--comment pattern] [array]
emulate -LR zsh


# Make '-a <name>' or '-A <name>' equivalent
# to '--type [a|A] <name>'.
if [[ "$1" =~ ^[-][Aa]$ ]]; then
  set -- '--type' ${1#-} ${argv:2}
fi
local -A opts
opts=( [--type]='a' [--split-at]='\n'  [--comment]='[#]*' )
zparseopts-generate -A opts --short-options -- ${(@)argv}


if [[ $# -lt 2 ]]; then
  error -1 -m 'not enough arguments'
fi


local file=$2
if [[ ! -e $file ]]; then
  error -1 -m 'file not found: ${file}'
fi


if [[ ! -v 1 ]]; then
  typeset "argv[1]"=reply
fi
case ${opts[--type]} in
  a) typeset -ag $1 ;;
  A) typeset -Ag $1 ;;
  *) error -1 -m 'invalid array type: ${type}' ;;
esac


local split=${opts[--split-at]}
local comment=${opts[--comment]}
set -A $1 ${(@ps:$split:)"${(f)$(< $file)}":#${~comment}}


return $(( ${(P)#1} == 0 ))
