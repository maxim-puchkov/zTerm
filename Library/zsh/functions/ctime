#!/bin/zsh

#  ctime
#  Z-Function (115)
#
#  Created by Maxim Puchkov on 2020-09-10.
#  Copyright Â© 2020 Maxim Puchkov. All rights reserved.


# ctime - measure the time it takes for each command
#         to complete N times.
#
# ctime [-N number] 'command' [...]
#
# Examples:
# 1. Run commands `echo "Hello"' and `printf "Hello\n"' 10 times:
#    ctime -N 10 'echo "Hello"' 'printf "Hello\n"'
if [[ ${+functions[$0]} -eq 1 ]]; then
  unset -f $0
  autoload $0
fi


#MARK: - Repetition Count
# Default number of reptitions
typeset -i count=10

# Parse options
while [[ $1 =~ ^[-] ]]; do
  case $1 in
    # -N: number of times each command is invoked
    (-N)
      if [[ $2 -gt 0 ]]; then
        let count="$2"
        shift
      else
        printf '%s: count must be a positive number.\n' "$0" >&2
        return 1
      fi
    ;;
    
    # Skip '--'
    (--)
      shift
      break
    ;;
    
    (*)
      printf '%s: bad option: %s.\n' "$0" "$1" >&2
      return 1
    ;;
  esac
  shift
done




return 0

(time ( repeat $count; do $=@; done ))

time (
  while [[ $count -gt 0 ]];
  do
    $@
    let count="$count-1"
  done
)
#
#
##MARK: - Executed Commands
## Loop with '$1' iterations of command '$2'
#function ctime-loop() {
#  let N="$1"
#  local cmd="$2"
#  sprint -magenta-bg "Ctime Loop called for N='${1}', COMMAND='${2}'."
#
#  while [[ $N -gt 0 ]]
#  do
#    zsh -c "$cmd"
#    let N="($N - 1)"
#  done &>/dev/null
#
#  return 0
#}
#
## If commands are not specified, print error
#if [[ $# -eq 0 ]]; then
#  printf '%s: commands are not specified.\n' "$0" >&2
#  return 1
#fi
#
## Invoke each command N times
#while [[ -n $1 ]]; do
#  time (ctime-loop $count "${1}") &!
#  shift
#done




#printf \
#  '%s: measuring time to run each of the %i commands N=%i times.\n' \
#  "$0" ${#argv} $count >&2

#  red "Loop Command: <${1}>"
#  green "ctime-loop $count \"${1}\" &!"

#for cmd do done ctime-loop $N &!



#TODO: Get total time to run command x:
#  typeset x
#  x='echo "Bobby"'
#  (time ($=x &>/dev/null)) 2>&1 | egrep -o '[^[:space:]]+ total'


