#!/bin/zsh

#  ctime
#  Z-Function (115)
#
#  Created by Maxim Puchkov on 2020-09-10.
#  Copyright Â© 2020 Maxim Puchkov. All rights reserved.


# ctime - measure the time it takes for each command
#         to complete N times.
#
# ctime [-N number] 'command' [...]
#
# Examples:
# 1. Run commands `echo "Hello"' and `printf "Hello\n"' 10 times:
#    ctime -N 10 'echo "Hello"' 'printf "Hello\n"'



#MARK: - Repetition Count
# Default number of reptitions
typeset -i repetition_count=10000

# Parse options
while [[ $1 =~ '^[-]' ]]
do
  case $1 in
    # -N: number of times each command is invoked
    (-N)
      if [[ $2 -gt 0 ]]; then
        let repetition_count="$2"
        shift
      else
        printf '%s: count must be a positive number.\n' "$0" >&2
        return 1
      fi
    ;;
    
    # Skip '--'
    (--)
      shift
      break
    ;;
    
    (*)
      printf '%s: bad option: %s.\n' "$0" "$1" >&2
      return 1
    ;;
  esac
  shift
done




#MARK: - Executed Commands
# Measure time to complete '$1' executions
# of command '$2'
function ctime-loop() {(
  magentabg "Ctime Loop called for N='${1}', COMMAND='${2}'."
  
  while [[ $1 -gt 0 ]]
  do
    zsh -c "$2"
    let "argv[1]=($1 - 1)"
  done
  
  return 0
)}

# If commands are not specified, print error
if [[ $# -eq 0 ]]; then
  printf '%s: commands are not specified.\n' "$0" >&2
  return 1
fi

# Invoke each command N times
while [[ -n $1 ]]; do
  ctime-loop $repetition_count "${1}" &!
  shift
done




#printf \
#  '%s: measuring time to run each of the %i commands N=%i times.\n' \
#  "$0" ${#argv} $repetition_count >&2

#  red "Loop Command: <${1}>"
#  green "ctime-loop $repetition_count \"${1}\" &!"

#for cmd do done ctime-loop $N &!



#TODO: Get total time to run command x:
#  typeset x
#  x='echo "Bobby"'
#  (time ($=x &>/dev/null)) 2>&1 | egrep -o '[^[:space:]]+ total'


