#!/bin/zsh

#  snip
#  Z-Function (86)
#
#  Created by Maxim Puchkov on 2020-07-05.
#  Copyright Â© 2020 Maxim Puchkov. All rights reserved.


# <#Function description#>
function snip() {
print-var @
    # Initialize variables
    if [[ -z $x ]] || [[ -z $p ]]; then
        if [[ -z $x ]]; then
            x='Hello world'
            show 'Set x to "$x"'
        fi
        if [[ -z $p ]]; then
            p='^Hello*'
            show 'Set p to "$p"'
        fi
        print-line -b blue -c '-'
        
        if [[ -v S ]]; then
            typeset S=$(red '** STAR**')
        fi
    fi
    
    setopt extendedglob
    function ${0}_case() {
        () {
            set -- ${argv##?=}
            show "arg1=<${1}>"
            show "arg2=<${2}>"
            case $1 in
                ($~2)
                    OK  "$1 matches"  ;;
                (*) red "** STAR **" ;;
            esac
        } 1=
    }
    
    function $0_get() {
        () {
            set -- ${argv##?=}
            get --F $F --O $O -- $argv
            show "argv=<${argv}>"
            show "F=<${F}>, O=<${O}>"
        } F=
    }
    
    
    function $0_cc() { }
    
    

    if [[ $# -eq 0 ]]; then
        fn print-commands $0
        return 0
    fi
    typeset f="${0}_${1}"
#    typeset functions[$f]="${functions[$f]}; "
#    functions $f
#    print -- ${functions[$f]}
    
#    echo -------------
    if [[ ${+functions[$f]} -ne 1 ]]; then
        error -127 'Not found: ${f}.'
    fi
    print -z -- "${(z)functions[$f]} "
    return 0
}
