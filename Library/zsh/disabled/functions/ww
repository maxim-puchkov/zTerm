#!/bin/zsh

#  ww
#  
#
#  Created by mpuchkov on 2020-03-06.
#  Copyright Â© 2020 Maxim Puchkov. All rights reserved.


# Extended 'ww' command:
#   Syntax              Description
#   -------------------------------
#   ww
#   ww prog
#   ww spec prog
function ww() {
    # Source utility and command string.
    BASE=$( basename $0 )
    COMMAND=$1
    get_options ${BASE}_opts "$@"
    
    function ww_shell() {
        local all=$( echo $options | wc -w )
        local on=$( echo $options | grep 'on' -o | wc -l )
        all="${all// }"
        on="${on// }"
        echo "$SHELL - level $SHLVL, $on/$all options enabled"
    }
    
    # Command ww ww.
    function ww_ww() {
        local program=$1
#        SYNTAX=(ww program)
#        if [[ -z $program ]]; then
#            serror 'program' "$SYNTAX"
#        fi
        
        local CMD_BREAK="BREAK"
        local _commands=(
            'type -w' 'command -v' 'file -bIp'
            $CMD_BREAK
            'ww' 'whence' 'wwmod' 'what size'
            $CMD_BREAK
            'when access' 'when mod'
            $CMD_BREAK
            'fnsrc' 'pscount'
            $CMD_BREAK
        )
        
        local tmp=$( tempfile )
        for cmd in $_commands; do
            setopt noerrreturn
            if [[ $cmd == $CMD_BREAK ]]; then
                echo
                continue
            fi
            
            ${(z)cmd} $program >& $tmp
            local ecode=$?
            local result=$(< $tmp)
            if [[ $ecode -ne 0 || -z $result ]]; then
                result=$(_darkgrey 'no result')
            fi
            echo "${(r:30:)$(Info $cmd)} - $result"
        done
        rm -f $tmp
    }
    
    # Compound command.
    case $COMMAND in
        "")
            echo 'Usage:'
            echo $( command $0 )
            echo "  $(Bc $BASE) $(c 'command') $(Uc 'arguments')$(bmagenta '*') - call '$BASE command' function with '${@:1}' arguments."
            ;;
        *)
            shift
            ${BASE}_${COMMAND} "$@"
            local ecode=$?
            if [[ $ecode -eq 127 ]]; then
                echo "Unknown command: $(r $COMMAND) (exit code: $ecode)." >&2
            fi
            ;;
    esac
}
