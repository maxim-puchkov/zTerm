#!/bin/zsh

#  get-parse-next
#
#
#  Created by Maxim Puchkov on 2020-07-09.
#  Copyright Â© 2020 Maxim Puchkov. All rights reserved.


# Name:
#   get-parse-next
#
# Description:
#   Parse names and values of options.
#   An option begins with a '-'
#   Parse script options' names and values
#   in positional arguments
emulate -L zsh
if [[ $1 =~ '^(-h|--help)$' ]]; then
  usage 'set -- -X x1 x2 x3 -Y y1 y2 -- other args' \
    'get-parse-next opt optargs\n\techo \\$opt : \\$optargs\t'"$(comment 'prints "-X : x1 x2 x3"')"'\n\tshift 1+\\${#optargs}' \
    'while get-parse-next; do\
      echo \\$opt : \\$optargs\t'"$(comment 'prints "-X : x1 x2 x3" and "-Y y1 y2"')"'\
    done'
  return 0
fi


# Identifier of a variable which stores
# option name (default: opt) and identifier
# of an array which stores option
# arguments (default: optargs).
typeset option_id=${1:=opt}
typeset option_args_id=${2:=optargs}
shift 2
if [[ -v $option_id ]];      then unset $option_id; fi
if [[ -v $option_args_id ]]; then unset $option_args_id; fi




#MARK: - Exit trap
trap '{
  typeset -i more_args=1
  typeset -i {,next_}option_index
  let option_index=${argv[(in:1:)[-+]*]}
  
  # If there is no argument which begins with '-' or '+', or if
  # the current option is a '-' repeated 2 or more times, then
  # there is nothing else to parse.
  if [[ $option_index -gt ${#argv} ]] ||
     [[ ${${(s::u)argv[$option_index]}} == '-' ]]; then
    let more_args=0
  fi
  
  # If there are unparsed arguments, find next option and
  # select all arguments between current and next options:
  #   -opt [arg1 ... argN] -nextopt ...
  if [[ $more_args -eq 1 ]]; then
    # Set option name
    typeset '$option_id'="${argv[$option_index]}"
    # Find next option and set arguments of current option
    let next_option_index=${argv[(in:2:)[-+]*]}
    typeset -a '$option_args_id'=(${argv[$option_index+1,$next_option_index-1]})
  fi
} always {
  # Print a message to standard error when done
  if [[ $more_args -eq 0 ]]; then
    echo 1 >&2
  fi
}' EXIT

#return 0
#    # get-parse-next -e: echo parsed options
#    if [[ '$o_echo' -eq 1 ]]; then
#      echo "get-parse-next: \topt=${(qqq)tmp_name}; optargs=(${(@qqq)tmp_args});"
#    fi
#    # get-parse-next -s: auto shift
#    if [[ '$o_skip' -eq 1 ]]; then
#      shift 1+${#tmp_args}
#    fi
